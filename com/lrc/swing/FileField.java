/*
 * FileRenderer.java
 *
 * Created on June 2, 2001, 10:06 PM
 */
package com.lrc.swing;

import java.io.File;

import java.util.*;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;


/**
 * DOCUMENT ME!
 *
 * @author fred
 * @version
 */
public abstract class FileField extends javax.swing.JPanel {
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldEdit;
    private javax.swing.JButton fieldSelect;

    // End of variables declaration//GEN-END:variables
    java.io.File file = null;
    java.util.List listeners = new LinkedList();
    File currentDir = null;

    /**
     * Creates new form FileRenderer
     */
    public FileField() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * FormEditor.
     */
    private void initComponents() //GEN-BEGIN:initComponents
     {
        fieldEdit = new javax.swing.JTextField();
        fieldSelect = new javax.swing.JButton();
        setLayout(new javax.swing.BoxLayout(this, 0));

        fieldEdit.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    fieldEditActionPerformed(evt);
                }
            });

        add(fieldEdit);

        fieldSelect.setText("...");
        fieldSelect.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    fieldSelectActionPerformed(evt);
                }
            });

        add(fieldSelect);
    }
     //GEN-END:initComponents

    private void fieldSelectActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_fieldSelectActionPerformed

        String sfile = chooseAFile();

        if (sfile != null) {
            setFile(new File(sfile));
            fireEditingStopped();
        } else
            fireEditingCanceled();
    }
     //GEN-LAST:event_fieldSelectActionPerformed

    private void fieldEditActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_fieldEditActionPerformed

        // Add your handling code here:
        file = new File(fieldEdit.getText());
        System.out.println("New file is "+file);
        fireEditingStopped();
    }
     //GEN-LAST:event_fieldEditActionPerformed

    public void setFile(java.io.File file) {
        this.file = file;
        fieldEdit.setText(file.toString());
    }

    public java.io.File getFile() {
        return file;
    }

    public void addCellEditorListener(CellEditorListener l) {
        listeners.add(l);
    }

    public void removeCellEditorListener(javax.swing.event.CellEditorListener l) {
        listeners.remove(l);
    }

    protected void fireEditingCanceled() {
        ChangeEvent ce = new ChangeEvent(this);

        for (int i = 0; i < listeners.size(); ++i)
            ((CellEditorListener) listeners.get(i)).editingCanceled(ce);
    }

    protected void fireEditingStopped() {
        ChangeEvent ce = new ChangeEvent(this);

        for (int i = 0; i < listeners.size(); ++i)
            ((CellEditorListener) listeners.get(i)).editingStopped(ce);
    }

    /**
     * returns a filename that the User chose, or null if user canceled.
     *
     * @return DOCUMENT ME!
     */
    String chooseAFile() {
        try {
            if (currentDir == null)
                currentDir = new File(file.getPath());

            JFileChooser chooser = new JFileChooser(currentDir);

            //SoundFileFilter filter = new SoundFileFilter();
            //filter.addExtension("mid");
            //filter.addExtension("wav");
            //filter.setDescription("Sound Files for " + key);
            //chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(null);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                currentDir = chooser.getCurrentDirectory();

                return chooser.getSelectedFile().getPath();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;
    }
}
